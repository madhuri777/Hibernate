<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>jBPM 7.8 native execution of BPMN2, DMN 1.1 and CMMN 1.1</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/7zMguQyzoSs/jbpm-78-native-execution-of-bpmn2-dmn.html" /><category term="case_cmmn" scheme="searchisko:content:tags" /><category term="case_mgmt" scheme="searchisko:content:tags" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><category term="jbpm_7.8" scheme="searchisko:content:tags" /><category term="jbpm_bpmn2" scheme="searchisko:content:tags" /><category term="jbpm_cases" scheme="searchisko:content:tags" /><category term="jbpm_cmmn" scheme="searchisko:content:tags" /><category term="jbpm_dmn" scheme="searchisko:content:tags" /><author><name>Maciej Swiderski</name></author><id>searchisko:content:id:jbossorg_blog-jbpm_7_8_native_execution_of_bpmn2_dmn_1_1_and_cmmn_1_1</id><updated>2018-06-15T12:58:28Z</updated><published>2018-06-15T12:58:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;with upcoming 7.8 release of jBPM there is quite nice thing to announce - native execution of:&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;BPMN2 - was there already for many years&lt;/li&gt;&lt;li&gt;DMN 1.1 - from the early days of version 7&lt;/li&gt;&lt;li&gt;CMMN 1.1 - comes with version 7.8&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;The biggest thing coming with 7.8 is actually CMMN execution. It is mainly added for completeness of the execution so people who would like to model case with CMMN can actually execute that directly on jBPM (via KIE Server or embedded).&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Although jBPM supports now CMMN, it is still recommended to use BPMN2 and case management features of jBPM for advanced cases to benefit from features that both specification brings rather to be limited to particular approach. Nevertheless CMMN can be a good visualisation for less complex cases where data and loosely coupled activities can build a good business view.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;i&gt;Disclaimer: jBPM currently does not provide nor plans to provide any modelling capabilities for CMMN.&lt;/i&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;With that said let's take a quick look at what is supported from the CMMN specification as obviously it's not covering 100% of the spec.&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;tasks (human task, process task, decision task, case task)&lt;/li&gt;&lt;li&gt;discretionary tasks (same as above)&lt;/li&gt;&lt;li&gt;stages&lt;/li&gt;&lt;li&gt;milestones&lt;/li&gt;&lt;li&gt;case file items&lt;/li&gt;&lt;li&gt;sentries (both entry and exit)&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;div&gt;Not all attributes of tasks are supported - required, repeat and manual activation are currently not supported. Although most of the behaviour can still be achieved using different constructs.&lt;/div&gt;&lt;div&gt;Sentries for individual tasks are limited to entry criteria while entry and exit are supported for stages and milestones.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Decision task by default maps to DMN decision although ruleflow group based is also possible with simplified syntax - decisionRef should be set to ruleflow-group attribute.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Event listeners are not supported as they do not bring much value for execution and instead CaseEventListener support in jBPM should be used as substitute.&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Let's have a quick look at how the sample Order IT case would look like designed in CMMN&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-YDMiMFfpR1w/WyOvBRxMgfI/AAAAAAAABdg/d8DiMkhLlcUzJa9_6hVNr4SN9ZbYYSDjQCLcBGAs/s1600/Screen%2BShot%2B2018-06-15%2Bat%2B14.07.45.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="727" data-original-width="1421" height="326" src="https://4.bp.blogspot.com/-YDMiMFfpR1w/WyOvBRxMgfI/AAAAAAAABdg/d8DiMkhLlcUzJa9_6hVNr4SN9ZbYYSDjQCLcBGAs/s640/Screen%2BShot%2B2018-06-15%2Bat%2B14.07.45.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;some might say it's less or more readable and frankly speaking it's just a matter of preferences.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Here is a screencast showing this CMMN model being executed&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;iframe allow="autoplay; encrypted-media" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/wYtsHUwCgWc" width="560"&gt;&lt;/iframe&gt; &lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Next I'd like to show the true power of jBPM - execution of all three types of models:&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;CMMN for top level case definition&lt;/li&gt;&lt;li&gt;DMN for decision service&lt;/li&gt;&lt;li&gt;BPMN2 for process execution&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;you can add all of them into kjar (via import asset in workbench) build, deploy from workbench directly to KIE Server and execute. So here are our assets&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;A case definition that has:&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;decision task that invokes DMN decision that calculates vacation days (Total Vacation Days)&lt;/li&gt;&lt;li&gt;two human tasks that are triggered based on the data (entry criterion)&lt;/li&gt;&lt;li&gt;process task that invokes BPMN2 process if the entry condition is met&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://2.bp.blogspot.com/-GxcN8ZrhafQ/WyOwDdaXAOI/AAAAAAAABdo/rWJfD90-vWgRV1eqdk3AYVVn27DRzX9lQCLcBGAs/s1600/Screen%2BShot%2B2018-06-15%2Bat%2B14.08.12.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="722" data-original-width="881" height="522" src="https://2.bp.blogspot.com/-GxcN8ZrhafQ/WyOwDdaXAOI/AAAAAAAABdo/rWJfD90-vWgRV1eqdk3AYVVn27DRzX9lQCLcBGAs/s640/Screen%2BShot%2B2018-06-15%2Bat%2B14.08.12.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Here is our DMN model&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-Qz3ivqECBgQ/WyOwwBUXNwI/AAAAAAAABdw/rxA3p8JUbMM2ghWVz1ySBA_gnqOZkhCfwCLcBGAs/s1600/Screen%2BShot%2B2018-06-15%2Bat%2B14.08.33.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="607" data-original-width="1013" height="382" src="https://4.bp.blogspot.com/-Qz3ivqECBgQ/WyOwwBUXNwI/AAAAAAAABdw/rxA3p8JUbMM2ghWVz1ySBA_gnqOZkhCfwCLcBGAs/s640/Screen%2BShot%2B2018-06-15%2Bat%2B14.08.33.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;and last but not least is the BPMN2 process (actually the most simple one but still a valid process)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-v_3ZlVoIf9k/WyOw1bLDmcI/AAAAAAAABd0/nKyRaEZWIbgvWs7O76_sanMbfLcjEQgkQCLcBGAs/s1600/Screen%2BShot%2B2018-06-15%2Bat%2B14.09.10.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="272" data-original-width="606" height="286" src="https://1.bp.blogspot.com/-v_3ZlVoIf9k/WyOw1bLDmcI/AAAAAAAABd0/nKyRaEZWIbgvWs7O76_sanMbfLcjEQgkQCLcBGAs/s640/Screen%2BShot%2B2018-06-15%2Bat%2B14.09.10.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Another thing to mention is that, all the models where done with Tristotech Editors to illustrate that they can be simply created with another tool and imported into kjar for execution.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Here is another screencast showing this all step by step, from exporting from Tristotech, importing into workbench, building and deploying kjar and lastly execute on KIE Server.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;iframe allow="autoplay; encrypted-media" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/R2D7SFqTbNo" width="560"&gt;&lt;/iframe&gt; &lt;div&gt;&lt;br /&gt;That's all to share for now, 7.8 is just around the corner so keep your eyes open and visit &lt;a href="http://jbpm.org/"&gt;jbpm.org&lt;/a&gt; to learn more.&lt;br /&gt;&lt;br /&gt;And at the end here are the links to the projects (kjars) in github&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;a href="https://github.com/mswiderski/cmmn-itorders"&gt;CMMN Order IT case sample&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://github.com/mswiderski/cmmn-dmn-bpmn"&gt;CMMN, DMN, BPMN sample&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;Enjoy!&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/7zMguQyzoSs" height="1" width="1" alt=""/&gt;</content><summary>with upcoming 7.8 release of jBPM there is quite nice thing to announce - native execution of: BPMN2 - was there already for many years DMN 1.1 - from the early days of version 7 CMMN 1.1 - comes with version 7.8 The biggest thing coming with 7.8 is actually CMMN execution. It is mainly added for completeness of the execution so people who would like to model case with CMMN can actually execute th...</summary><dc:creator>Maciej Swiderski</dc:creator><dc:date>2018-06-15T12:58:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2018/06/jbpm-78-native-execution-of-bpmn2-dmn.html</feedburner:origLink></entry><entry><title>Announcing .NET Core 2.1 for Red Hat Platforms</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/aUpfi5Mos60/" /><category term=".NET Core" /><category term="C#" /><category term="Containers" /><category term="Developer Tools" /><category term="Microservices" /><category term="Modern App Dev" /><category term=".NET" /><category term="containers" /><category term="microservices" /><category term="OpenShift Container Platform" /><category term="Red Hat OpenShift" /><author><name>Bob Davis</name></author><id>https://developers.redhat.com/blog/?p=498747</id><updated>2018-06-14T16:29:50Z</updated><published>2018-06-14T16:29:50Z</published><content type="html">&lt;p&gt;&lt;span style="font-weight: 400"&gt;We are very pleased to announ&lt;/span&gt;&lt;span style="font-weight: 400"&gt;ce the general availability of .NET Core 2.1 for Red Hat Enterprise Linux and OpenShift platforms!&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;.NET Core is the open-source, cross-platform .NET platform for building microservices. .NET Core is designed to provide the best performance at scale for applications that use microservices and containers. Libraries can be shared with other .NET platforms, such as .NET Framework (Windows) and Xamarin (mobile applications). With .NET Core you have the flexibility of building and deploying applications on Red Hat Enterprise Linux or in containers. Your container-based applications and microservices can easily be deployed to your choice of public or private clouds using Red Hat OpenShift. All of the features of OpenShift and Kubernetes for cloud deployments are available to you.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;.NET Core 2.1 continues to broaden its support and tools for microservice development in an open source environment. The latest version of .NET Core includes the following improvements:&lt;/span&gt;&lt;span id="more-498747"&gt;&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Improved build performance&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Improved runtime performance&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Improved networking performance&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;The new &lt;code&gt;Span&amp;#60;T&amp;#62;&lt;/code&gt; based APIs for reducing allocations&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Extended Cryptography APIs&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;API Support for Brotli compression&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;A new way of deploying tools as NuGet Packages&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;This release further reduces platform differences between Windows and Linux.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;As usual, .NET Core 2.1 is available via &lt;/span&gt;&lt;a href="https://developers.redhat.com/products/dotnet/hello-world/"&gt;&lt;span style="font-weight: 400"&gt;traditional “yum” install&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt; (rh-dotnet21) or in containers through our &lt;/span&gt;&lt;a href="https://access.redhat.com/containers/#/search/dotnet"&gt;&lt;span style="font-weight: 400"&gt;container catalog&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt;.&lt;/span&gt;&lt;/p&gt; &lt;h3&gt;&lt;span style="font-weight: 400"&gt;Release and support information&lt;/span&gt;&lt;/h3&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;Developers may use .NET Core 2.1 to develop and deploy applications on:&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Red Hat Enterprise Linux&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Red Hat Enterprise Linux Atomic Host&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Red Hat OpenShift Container Platform  &lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Red Hat OpenShift Online&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Red Hat OpenShift Dedicated&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Red Hat OpenStack Platform&lt;/span&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;Following a small number of significant releases in the next few months, .NET Core 2.1 is expected to switch to long-term support (LTS) release as described in the &lt;/span&gt;&lt;a href="https://access.redhat.com/support/policy/updates/net-core"&gt;&lt;span style="font-weight: 400"&gt;Red Hat’s lifecycle documentation&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt;. This means that critical updates addressing security and reliability will be offered for 3 years. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;For more information, please visit the following:&lt;/span&gt;&lt;/p&gt; &lt;ol&gt; &lt;li style="font-weight: 400"&gt;&lt;a href="https://access.redhat.com/documentation/en-us/net_core/2.1/html-single/getting_started_guide/index"&gt;&lt;span style="font-weight: 400"&gt;Get Started with .NET Core 2.1!&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Visit &lt;/span&gt;&lt;a href="http://redhatloves.net/"&gt;&lt;span style="font-weight: 400"&gt;RedHatLoves.NET&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;The Red Hat Developer Program &lt;/span&gt;&lt;a href="https://developers.redhat.com/products/dotnet/overview/"&gt;&lt;span style="font-weight: 400"&gt;technology page on .NET Core&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt;.&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;span style="font-weight: 400"&gt;Red Hat Developer &lt;/span&gt;&lt;a href="https://developers.redhat.com/blog/category/programming/dot-net/"&gt;&lt;span style="font-weight: 400"&gt;blogs&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt; on .NET Core&lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400"&gt;&lt;a href="https://access.redhat.com/documentation/en-us/net_core/2.1/"&gt;&lt;span style="font-weight: 400"&gt;Product Documentation for .NET Core&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;/ol&gt; &lt;p&gt;&lt;span style="font-weight: 400"&gt;For complete information on the updates and changes made in this release, &lt;/span&gt;&lt;a href="https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.0.md"&gt;&lt;span style="font-weight: 400"&gt;please visit the project page on GitHub&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt;. Any important differences between Red Hat’s official source build and other builds that are available will be &lt;/span&gt;&lt;a href="https://access.redhat.com/documentation/en-us/net_core/2.1/"&gt;&lt;span style="font-weight: 400"&gt;detailed in our release notes&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400"&gt;. &lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fannouncing-net-core-2-1-for-red-hat-platforms%2F&amp;#38;linkname=Announcing%20.NET%20Core%202.1%20for%20Red%20Hat%20Platforms" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fannouncing-net-core-2-1-for-red-hat-platforms%2F&amp;#38;linkname=Announcing%20.NET%20Core%202.1%20for%20Red%20Hat%20Platforms" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fannouncing-net-core-2-1-for-red-hat-platforms%2F&amp;#38;linkname=Announcing%20.NET%20Core%202.1%20for%20Red%20Hat%20Platforms" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fannouncing-net-core-2-1-for-red-hat-platforms%2F&amp;#38;linkname=Announcing%20.NET%20Core%202.1%20for%20Red%20Hat%20Platforms" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fannouncing-net-core-2-1-for-red-hat-platforms%2F&amp;#38;linkname=Announcing%20.NET%20Core%202.1%20for%20Red%20Hat%20Platforms" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fannouncing-net-core-2-1-for-red-hat-platforms%2F&amp;#38;linkname=Announcing%20.NET%20Core%202.1%20for%20Red%20Hat%20Platforms" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fannouncing-net-core-2-1-for-red-hat-platforms%2F&amp;#38;linkname=Announcing%20.NET%20Core%202.1%20for%20Red%20Hat%20Platforms" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fannouncing-net-core-2-1-for-red-hat-platforms%2F&amp;#38;linkname=Announcing%20.NET%20Core%202.1%20for%20Red%20Hat%20Platforms" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fannouncing-net-core-2-1-for-red-hat-platforms%2F&amp;#38;title=Announcing%20.NET%20Core%202.1%20for%20Red%20Hat%20Platforms" data-a2a-url="https://developers.redhat.com/blog/2018/06/14/announcing-net-core-2-1-for-red-hat-platforms/" data-a2a-title="Announcing .NET Core 2.1 for Red Hat Platforms"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/14/announcing-net-core-2-1-for-red-hat-platforms/"&gt;Announcing .NET Core 2.1 for Red Hat Platforms&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/aUpfi5Mos60" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;.NET Core 2.1 is now available for Red Hat Enterprise Linux and OpenShift platforms! .NET Core is the open-source, cross-platform .NET platform for building microservices. .NET Core is designed to provide the best performance at scale.&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/14/announcing-net-core-2-1-for-red-hat-platforms/"&gt;Announcing .NET Core 2.1 for Red Hat Platforms&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/06/14/announcing-net-core-2-1-for-red-hat-platforms/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">498747</post-id><dc:creator>Bob Davis</dc:creator><dc:date>2018-06-14T16:29:50Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/06/14/announcing-net-core-2-1-for-red-hat-platforms/</feedburner:origLink></entry><entry><title>Debugging Memory Issues with Open vSwitch DPDK</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ZoZS5zLebLI/" /><category term="OpenStack" /><category term="Red Hat Enterprise Linux" /><category term="debugging" /><category term="dpdk" /><category term="fast datapath" /><category term="hugepages" /><category term="networking" /><category term="NFV" /><category term="Open vSwitch" /><category term="openvswitch" /><category term="ovs-dpdk" /><category term="Virtualization" /><author><name>Kevin Traynor</name></author><id>https://developers.redhat.com/blog/?p=500667</id><updated>2018-06-14T11:00:48Z</updated><published>2018-06-14T11:00:48Z</published><content type="html">&lt;h2 id="introduction"&gt;Introduction&lt;/h2&gt; &lt;p&gt;This article is about debugging out-of-memory issues with &lt;a href="http://docs.openvswitch.org/en/latest/intro/install/dpdk/"&gt;Open vSwitch with the Data Plane Development Kit&lt;/a&gt; (OvS-DPDK). It explains the situations in which you can run out of memory when using OvS-DPDK and it shows the log entries that are produced in those circumstances. It also shows some other log entries and commands for further debugging.&lt;/p&gt; &lt;p&gt;When you finish reading this article, you will be able to identify that you have an out-of-memory issue and you&amp;#8217;ll know how to fix it. Spoiler: Usually having some more memory on the relevant NUMA node works. It is based on OvS 2.9.&lt;/p&gt; &lt;p&gt;&lt;span id="more-500667"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2 id="background"&gt;Background&lt;/h2&gt; &lt;p&gt;As is normal with DPDK-type applications, it is expected that hugepage memory has been set up and mounted. For further information see &lt;a href="http://docs.openvswitch.org/en/latest/intro/install/dpdk/?highlight=hugepage#setup-hugepages"&gt;set up huge pages&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;The next step is to specify the amount of memory pre-allocated for OvS-DPDK. This is done using the Open vSwitch Database (OVSDB). In the case below, 4GB of huge-page memory is pre-allocated on NUMA node 0 and NUMA node 1.&lt;/p&gt; &lt;pre&gt;# ovs-vsctl --no-wait set Open_vSwitch . other_config:dpdk-socket-mem=4096,4096&lt;/pre&gt; &lt;p&gt;The default is 1GB for NUMA 0 if &lt;code&gt;dpdk-socket-mem&lt;/code&gt; is not specified.&lt;/p&gt; &lt;p&gt;Now, let&amp;#8217;s look at the times when we can run out of memory.&lt;/p&gt; &lt;h2 id="initialization"&gt;Initialization&lt;/h2&gt; &lt;p&gt;You can run out of memory when DPDK is initialized, which happens when &lt;code&gt;ovs-vswitchd&lt;/code&gt; is running and the OVSDB entry &lt;code&gt;dpdk-init&lt;/code&gt; is set to &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;A useful log entry to watch for during initialization is this:&lt;/p&gt; &lt;pre&gt;|dpdk|INFO|EAL ARGS: ovs-vswitchd -c 0x1 --socket-mem 4096,4096&lt;/pre&gt; &lt;p&gt;This will confirm that the &lt;code&gt;dpdk-socket-mem&lt;/code&gt; you &lt;em&gt;thought&lt;/em&gt; you were setting was actually set and passed to DPDK (thus avoiding the embarrassment of someone else pointing out that your scripts were wrong).&lt;/p&gt; &lt;p&gt;The most likely way to run out of memory during initialization is that huge page memory was not set up correctly:&lt;/p&gt; &lt;pre&gt;|dpdk|INFO|EAL ARGS: ovs-vswitchd -c 0x1 --socket-mem 4096,4096 |dpdk|INFO|EAL: 32 hugepages of size 1073741824 reserved, but no mounted hugetlbfs found for that size&lt;/pre&gt; &lt;p&gt;Another way is that you are requesting too much memory:&lt;/p&gt; &lt;pre&gt;|dpdk|INFO|EAL ARGS: ovs-vswitchd -c 0x1 --socket-mem 32768,0 |dpdk|ERR|EAL: Not enough memory available on socket 0! Requested: 32768MB, available: 16384MB&lt;/pre&gt; &lt;p&gt;Or you request none at all:&lt;/p&gt; &lt;pre&gt;|dpdk|INFO|EAL ARGS: ovs-vswitchd -c 0x1 --socket-mem 0,0 |dpdk|ERR|EAL: invalid parameters for --socket-mem&lt;/pre&gt; &lt;p&gt;All these issues can be fixed by correctly setting up huge pages and requesting to pre-allocate an appropriate amount.&lt;/p&gt; &lt;h2 id="adding-a-port-changing-mtu"&gt;Adding a Port or Changing the MTU&lt;/h2&gt; &lt;p&gt;These situations are grouped together because they can both result in a new pool of buffers being requested for a port. Where possible, these pools of buffers will be shared and reused, but that is not always possible due to differing port NUMA nodes or MTUs.&lt;/p&gt; &lt;p&gt;For new requests, the size of each buffer is fixed (MTU-based) but the number of buffers can be variable and OvS-DPDK will retry for a lower number of buffers if there is not enough memory for initial requests.&lt;/p&gt; &lt;p&gt;When DPDK cannot provide the requested memory to any one of the requests, it reports the following:&lt;/p&gt; &lt;pre&gt;|dpdk|ERR|RING: Cannot reserve memory&lt;/pre&gt; &lt;p&gt;While that may look serious, it&amp;#8217;s nothing to worry about because OvS handles this and simply retries for a lower amount. If however, the retries do not work then the following will be in the log:&lt;/p&gt; &lt;pre&gt;|netdev_dpdk|ERR|Failed to create memory pool for netdev dpdk0, with MTU 9000 on socket 0: Cannot allocate memory&lt;/pre&gt; &lt;p&gt;This case is an issue for functionality.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;If you were adding a port, it will not be usable.&lt;/li&gt; &lt;li&gt;If you were changing the MTU, the MTU change fails but the port will continue to operate with the previous MTU.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;How can you fix these errors? The general guide would be just to give OvS-DPDK more memory on the relevant NUMA node, or stick with a lower MTU.&lt;/p&gt; &lt;h2 id="starting-a-vm"&gt;Starting a VM&lt;/h2&gt; &lt;p&gt;It doesn&amp;#8217;t seem obvious why you would run out of memory when starting a VM, as opposed to when you are adding a vhost port for it (previous section). The key is vhost NUMA reallocation.&lt;/p&gt; &lt;p&gt;When a VM is started, DPDK checks the NUMA node of the memory shared from the guest. This may result in requesting a new pool of buffers from the same NUMA node. But of course, there might be no memory pre-allocated with &lt;code&gt;dpdk-socket-mem&lt;/code&gt; on that NUMA node, or else there might be insufficient memory left.&lt;/p&gt; &lt;p&gt;The log entry would be similar to the add port/change MTU cases:&lt;/p&gt; &lt;pre&gt;|netdev_dpdk|ERR|Failed to create memory pool for netdev vhost0, with MTU 1500 on socket 1: Cannot allocate memory&lt;/pre&gt; &lt;p&gt;The fix for this is having enough memory on the relevant NUMA node, or changing the libvirt/QEMU settings so VM memory is from a different NUMA node.&lt;/p&gt; &lt;h2 id="runtimeadding-a-portadding-queues"&gt;Runtime, Adding a Port, or Adding Queues&lt;/h2&gt; &lt;p&gt;Didn&amp;#8217;t we already cover &lt;em&gt;adding a port?&lt;/em&gt; Yes, we did; however, this section is for when we get a requested pool of buffers, but some time later that proves to be insufficient.&lt;/p&gt; &lt;p&gt;This might be because there are many ports and queues sharing a pool of buffers and by the time some buffers are reserved for Rx queues, some are in flight processing and some are waiting to be returned from Tx queues, so there just aren&amp;#8217;t enough buffers to go around.&lt;/p&gt; &lt;p&gt;For example, the log entries when this occurs while using a physical NIC could look like this:&lt;/p&gt; &lt;pre&gt;|dpdk|ERR|PMD: ixgbe_alloc_rx_queue_mbufs(): RX mbuf alloc failed queue_id=0 |dpdk|ERR|PMD: ixgbe_dev_rx_queue_start(): Could not alloc mbuf for queue:0 |dpdk|ERR|PMD: ixgbe_dev_start(): Unable to start rxtx queues |dpdk|ERR|PMD: ixgbe_dev_start(): failure in ixgbe_dev_start(): -1 |netdev_dpdk|ERR|Interface dpdk0 start error: Input/output error&lt;/pre&gt; &lt;p&gt;For vhost ports, buffers are not reserved but you could see at runtime that you cannot get a new buffer while polling vhost ports. The log entry could look like this:&lt;/p&gt; &lt;pre&gt;|dpdk(pmd91)|ERR|VHOST_DATA: Failed to allocate memory for mbuf.&lt;/pre&gt; &lt;p&gt;If all the ports are needed, the easiest way to resolve this is to reduce the numbers of Rx queues or reserved buffers for the physical NICs. This can be done with the following command:&lt;/p&gt; &lt;pre&gt;# ovs-vsctl set Interface dpdk0 options:n_rxq=4&lt;/pre&gt; &lt;p&gt;or with this command:&lt;/p&gt; &lt;pre&gt;# ovs-vsctl set Interface dpdk0 options:n_rxq_desc=1024&lt;/pre&gt; &lt;p&gt;Alternatively, memory could be increased to ensure that a large pool of buffers will be available (that is, avoiding retries for lower amounts) but that approach scales only so far.&lt;/p&gt; &lt;h2 id="further-debug"&gt;Further Debugging&lt;/h2&gt; &lt;p&gt;If you run out of memory, there will be an error message in the log. If you want further details about the pools of memory being allocated, reused,  and freed, you can turn on debug mode:&lt;/p&gt; &lt;pre&gt;# ovs-appctl vlog/set netdev_dpdk:console:dbg # ovs-appctl vlog/set netdev_dpdk:syslog:dbg # ovs-appctl vlog/set netdev_dpdk:file:dbg&lt;/pre&gt; &lt;p&gt;Allocated, reused,  and freed messages will look like this:&lt;/p&gt; &lt;pre&gt;|netdev_dpdk|DBG|Allocated "ovs_mp_2030_0_262144" mempool with 262144 mbufs |netdev_dpdk|DBG|Reusing mempool "ovs_mp_2030_0_262144" |netdev_dpdk|DBG|Freeing mempool "ovs_mp_2030_0_262144"&lt;/pre&gt; &lt;p&gt;The name of the pool of buffers (that is, &lt;code&gt;mempool&lt;/code&gt;) gives us some information:&lt;/p&gt; &lt;pre&gt;2030 : Padded size of the buffer (derived from MTU) 0 : NUMA node the memory is allocated from 262144 : Number of buffers in the pool&lt;/pre&gt; &lt;p&gt;There is also a command to show which &lt;code&gt;mempool&lt;/code&gt; a port is using, as well as lots of other details (not shown):&lt;/p&gt; &lt;pre&gt;# ovs-appctl netdev-dpdk/get-mempool-info dpdk0 mempool &amp;#60;ovs_mp_2030_0_262144&amp;#62;@0x7f35ff77ce40 ...&lt;/pre&gt; &lt;h2 id="wrap-up"&gt;Wrap-up&lt;/h2&gt; &lt;p&gt;If you have read to here, it probably means you&amp;#8217;ve hit an issue with OvS-DPDK. Sorry to hear that. Hopefully, after reading the above guide you&amp;#8217;ll be able to identify if the issue was due to running out of memory and you&amp;#8217;ll know how to fix it.&lt;/p&gt; &lt;p&gt;Some guidance on how much memory is required and how to configure OvS-DPDK for multi-NUMA (including &lt;code&gt;dpdk-socket-mem&lt;/code&gt;) can be found in the &lt;a href="https://developers.redhat.com/blog/2018/03/16/ovs-dpdk-hugepage-memory/"&gt;OVS-DPDK: How much memory&lt;/a&gt; and &lt;a href="https://developers.redhat.com/blog/2017/06/28/ovs-dpdk-parameters-dealing-with-multi-numa/"&gt;OVS-DPDK: Multi-NUMA&lt;/a&gt; articles on this blog.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fdebugging-ovs-dpdk-memory-issues%2F&amp;#38;linkname=Debugging%20Memory%20Issues%20with%20Open%20vSwitch%20DPDK" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fdebugging-ovs-dpdk-memory-issues%2F&amp;#38;linkname=Debugging%20Memory%20Issues%20with%20Open%20vSwitch%20DPDK" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fdebugging-ovs-dpdk-memory-issues%2F&amp;#38;linkname=Debugging%20Memory%20Issues%20with%20Open%20vSwitch%20DPDK" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fdebugging-ovs-dpdk-memory-issues%2F&amp;#38;linkname=Debugging%20Memory%20Issues%20with%20Open%20vSwitch%20DPDK" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fdebugging-ovs-dpdk-memory-issues%2F&amp;#38;linkname=Debugging%20Memory%20Issues%20with%20Open%20vSwitch%20DPDK" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fdebugging-ovs-dpdk-memory-issues%2F&amp;#38;linkname=Debugging%20Memory%20Issues%20with%20Open%20vSwitch%20DPDK" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fdebugging-ovs-dpdk-memory-issues%2F&amp;#38;linkname=Debugging%20Memory%20Issues%20with%20Open%20vSwitch%20DPDK" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fdebugging-ovs-dpdk-memory-issues%2F&amp;#38;linkname=Debugging%20Memory%20Issues%20with%20Open%20vSwitch%20DPDK" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fdebugging-ovs-dpdk-memory-issues%2F&amp;#38;title=Debugging%20Memory%20Issues%20with%20Open%20vSwitch%20DPDK" data-a2a-url="https://developers.redhat.com/blog/2018/06/14/debugging-ovs-dpdk-memory-issues/" data-a2a-title="Debugging Memory Issues with Open vSwitch DPDK"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/14/debugging-ovs-dpdk-memory-issues/"&gt;Debugging Memory Issues with Open vSwitch DPDK&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ZoZS5zLebLI" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Introduction This article is about debugging out-of-memory issues with Open vSwitch with the Data Plane Development Kit (OvS-DPDK). It explains the situations in which you can run out of memory when using OvS-DPDK and it shows the log entries that are produced in those circumstances. It also shows some other log entries and commands for further [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/14/debugging-ovs-dpdk-memory-issues/"&gt;Debugging Memory Issues with Open vSwitch DPDK&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/06/14/debugging-ovs-dpdk-memory-issues/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">500667</post-id><dc:creator>Kevin Traynor</dc:creator><dc:date>2018-06-14T11:00:48Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/06/14/debugging-ovs-dpdk-memory-issues/</feedburner:origLink></entry><entry><title>Keycloak 4.0.0.Final Released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/rhgsic2mHfk/keycloak-400final-released.html" /><category term="feed_group_name_keycloak" scheme="searchisko:content:tags" /><category term="feed_name_keycloak" scheme="searchisko:content:tags" /><author><name>Stian Thorgersen</name></author><id>searchisko:content:id:jbossorg_blog-keycloak_4_0_0_final_released</id><updated>2018-06-14T07:38:19Z</updated><published>2018-06-14T07:38:00Z</published><content type="html">&lt;p&gt;To download the release go to the &lt;a href="http://www.keycloak.org/downloads"&gt;Keycloak homepage&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;For details on what is included in the release check out the &lt;a href="https://www.keycloak.org/docs/latest/release_notes/index.html"&gt;Release notes&lt;/a&gt;&lt;/p&gt; &lt;p&gt;The full list of resolved issues is available in &lt;a href="https://issues.jboss.org/issues/?jql=project%20%3D%20keycloak%20and%20fixVersion%20%3D%204.0.0.Final"&gt;JIRA&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Before you upgrade remember to backup your database and check the &lt;a href="http://www.keycloak.org/docs/latest/upgrading/index.html"&gt;upgrade guide&lt;/a&gt; for anything that may have changed. &lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/rhgsic2mHfk" height="1" width="1" alt=""/&gt;</content><summary>To download the release go to the Keycloak homepage. For details on what is included in the release check out the Release notes The full list of resolved issues is available in JIRA. Before you upgrade remember to backup your database and check the upgrade guide for anything that may have changed.</summary><dc:creator>Stian Thorgersen</dc:creator><dc:date>2018-06-14T07:38:00Z</dc:date><feedburner:origLink>http://blog.keycloak.org/2018/06/keycloak-400final-released.html</feedburner:origLink></entry><entry><title>Using the STOMP Protocol with Apache ActiveMQ Artemis Broker</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/b3AhZteGUJE/" /><category term="Integration" /><category term="JBoss A-MQ" /><category term="Python" /><category term="ActiveMQ" /><category term="amq" /><category term="artemis" /><category term="messaging" /><category term="python" /><category term="Red Hat AMQ" /><category term="STOMP" /><author><name>Chandra Shekhar Pandey</name></author><id>https://developers.redhat.com/blog/?p=501697</id><updated>2018-06-14T07:19:08Z</updated><published>2018-06-14T07:19:08Z</published><content type="html">&lt;p&gt;In this article, we will use a Python-based messaging client to connect and subscribe to a topic with a &lt;a href="https://developers.redhat.com/blog/2016/08/10/persistence-vs-durability-in-messaging/"&gt;durable&lt;/a&gt; subscription in the &lt;a href="https://activemq.apache.org/artemis/"&gt;Apache ActiveMQ Artemis&lt;/a&gt; broker. We will use the text-based &lt;a href="https://stomp.github.io/"&gt;STOMP&lt;/a&gt; protocol to connect and subscribe to the broker. STOMP clients can communicate with any STOMP message broker to provide messaging interoperability among many languages, platforms, and brokers.&lt;/p&gt; &lt;p&gt;If you need to brush up on the &lt;a href="https://developers.redhat.com/blog/2016/08/10/persistence-vs-durability-in-messaging/"&gt;difference between persistence and durability&lt;/a&gt; in messaging, check Mary Cochran&amp;#8217;s article on developers.redhat.com/blog.&lt;/p&gt; &lt;p&gt;A similar process can be used with &lt;a href="https://developers.redhat.com/products/amq/overview/"&gt;Red Hat AMQ 7&lt;/a&gt;. The broker in Red Hat AMQ 7 is based on the Apache ActiveMQ Artemis project. See the &lt;a href="https://developers.redhat.com/products/amq/overview/"&gt;overview&lt;/a&gt; on developers.redhat.com for more information.&lt;/p&gt; &lt;p&gt;&lt;span id="more-501697"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;strong&gt;Setting Up the Project&lt;/strong&gt;&lt;/h2&gt; &lt;p&gt;In the following example, we are using one client, both to publish and subscribe to a topic. You can find the code at my &lt;a href="https://github.com/1984shekhar/Artemis_POC/tree/master/python_stomp_example"&gt;personal GitHub repo&lt;/a&gt;. We have two &lt;a id="69bcdfb3c9c544f249bac6af7a20c063-a6f78788ddabb4df8495cae84d999a92e90a1359" class="js-navigation-open" title="receiver_queue.py" href="https://github.com/1984shekhar/Artemis_POC/blob/master/python_stomp_example/receiver_queue.py"&gt;receiver_queue.py&lt;/a&gt; and &lt;a id="fc379910fba7a36d1006069a40734294-e102b60425fc328abf23d49de36449ceaf0aaa37" class="js-navigation-open" title="receiver_topic.py" href="https://github.com/1984shekhar/Artemis_POC/blob/master/python_stomp_example/receiver_topic.py"&gt;receiver_topic.py&lt;/a&gt; Python messaging clients. While &lt;code&gt;receiver_queue.py&lt;/code&gt; is a Python client based on the STOMP protocol for point-to-point (queue) connection to the broker, &lt;code&gt;receiver_topic.py&lt;/code&gt; is a Python client based on the STOMP protocol for durable subscription against a topic to the broker.&lt;/p&gt; &lt;p&gt;Here is the code:&lt;/p&gt; &lt;pre&gt;import time import sys import stomp class MyListener(stomp.ConnectionListener): def on_error(self, headers, message): print('received an error "%s"' % message) def on_message(self, headers, message): print('received a message "%s"' % message) hosts = [('localhost', 61616)] conn = stomp.Connection(host_and_ports=hosts) conn.set_listener('', MyListener()) conn.start() conn.connect('admin', 'admin', wait=True,headers = {'client-id': 'clientname'} ) conn.subscribe(destination='A.B.C.D', id=1, ack='auto',headers = {'subscription-type': 'MULTICAST','durable-subscription-name':'someValue'}) conn.send(body=' '.join(sys.argv[1:]), destination='A.B.C.D') time.sleep(2) conn.disconnect() &lt;/pre&gt; &lt;p&gt;The following are tasks performed by this code:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;To receive messages from the messaging system, we need to set up a listener on a connection, and then later subscribe to the destination.&lt;/li&gt; &lt;li&gt;We are establishing a connection to the broker available locally on port 61616. The first parameter to a &lt;code&gt;Connection&lt;/code&gt; is &lt;code&gt;host_and_ports&lt;/code&gt;. This contains an IP address and the port where the message broker is listening for STOMP connections.&lt;/li&gt; &lt;li&gt;The &lt;code&gt;start&lt;/code&gt; method creates a socket connection to the broker.&lt;/li&gt; &lt;li&gt;Then we use the &lt;code&gt;connect&lt;/code&gt; method with credentials to access the broker and we use the &lt;code&gt;headers&lt;/code&gt; &lt;code&gt;client-id&lt;/code&gt; to ensure that the subscription that is created is durable.&lt;/li&gt; &lt;li&gt;Once a connection is established to the broker with &lt;code&gt;subscribe&lt;/code&gt; method, we are subscribing to destination &lt;code&gt;A.B.C.D&lt;/code&gt; using acknowledgment mode &lt;code&gt;auto&lt;/code&gt;. Also, we must provide the &lt;code&gt;headers&lt;/code&gt; subscription-type as &lt;code&gt;MULTICAST&lt;/code&gt; and &lt;code&gt;durable-subscription-name&lt;/code&gt; as some text value.&lt;/li&gt; &lt;li&gt;To create a durable subscription, the &lt;code&gt;client-id&lt;/code&gt; header must be set on the &lt;code&gt;CONNECT&lt;/code&gt; frame and the &lt;code&gt;durable-subscription-name&lt;/code&gt; must be set on the &lt;code&gt;SUBSCRIBE&lt;/code&gt; frame. The combination of these two headers will form the identity of the durable subscription.&lt;/li&gt; &lt;li&gt;After a connection is established to the broker, we can use the &lt;code&gt;send&lt;/code&gt; method to send/produce messages to the destination A.B.C.D. Here the first argument is to accept the text/string value from the command line, and the second argument is destination name or topic name.&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;&lt;strong&gt;How to Execute the Python Client&lt;/strong&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;Make sure the  Apache ActiveMQ Artemis broker is configured to support the STOMP protocol. By default, port 61616 is configured to support almost all messaging protocols.&lt;/li&gt; &lt;/ul&gt; &lt;pre&gt;&amp;#60;acceptor name="artemis"&amp;#62;tcp://0.0.0.0:61616?tcpSendBufferSize=1048576;tcpReceiveBufferSize=1048576;protocols=CORE,AMQP,STOMP,HORNETQ,MQTT,OPENWIRE;useEpoll=true;amqpCredits=1000;amqpLowCredits=300&amp;#60;/acceptor&amp;#62; &lt;/pre&gt; &lt;ul&gt; &lt;li&gt;To run the client using the STOMP protocol, we first need the &lt;code&gt;stomp&lt;/code&gt; module so that components of the STOMP API, such as &lt;code&gt;connect&lt;/code&gt;, &lt;code&gt;start&lt;/code&gt;,  &lt;code&gt;send&lt;/code&gt;, &lt;code&gt;subscribe&lt;/code&gt;, and &lt;code&gt;disconnect&lt;/code&gt;, are available. So install the &lt;code&gt;stomp&lt;/code&gt; module first.&lt;/li&gt; &lt;/ul&gt; &lt;pre&gt;pip install stomp.py &lt;/pre&gt; &lt;ul&gt; &lt;li&gt;Once the &lt;code&gt;stomp&lt;/code&gt; module is installed, we can easily run the client in the following way:&lt;/li&gt; &lt;/ul&gt; &lt;pre&gt;[cpandey@vm254-231 python_stomp_example]$ python receiver_topic.py "Hello World" received a message "Hello World" [cpandey@vm254-231 python_stomp_example]$ &lt;/pre&gt; &lt;ul&gt; &lt;li&gt;We can check the results using the following commands from the Apache ActiveMQ Artemis broker:&lt;/li&gt; &lt;/ul&gt; &lt;pre&gt;[cpandey@vm254-231 bin]$ ./artemis address show A.B.C.D DLQ [cpandey@vm254-231 bin]$ ./artemis queue stat --user admin --password admin --url tcp://localhost:61616 OpenJDK 64-Bit Server VM warning: If the number of processors is expected to increase from one, then you should configure the number of parallel GC threads appropriately using -XX:ParallelGCThreads=N |NAME |ADDRESS |CONSUMER_COUNT |MESSAGE_COUNT |MESSAGES_ADDED |DELIVERING_COUNT |MESSAGES_ACKED | |DLQ |DLQ |0 |0 |0 |0 |0 | |ExpiryQueue |ExpiryQueue |0 |0 |0 |0 |0 | |clientname.someValue |A.B.C.D |0 |0 |1 |0 |1 | [cpandey@vm254-231 bin]$ &lt;/pre&gt; &lt;p&gt;Note: A.B.C.D is the &lt;code&gt;Address&lt;/code&gt; created and the durable subscription is created as queue &lt;code&gt;clientname.someValue&lt;/code&gt;.&lt;/p&gt; &lt;ul&gt; &lt;li&gt;If we read the network dumps using Wireshark, the following is the complete stream:&lt;/li&gt; &lt;/ul&gt; &lt;pre&gt;STOMP accept-version:1.1 client-id:clientname login:admin passcode:admin .CONNECTED version:1.1 session:4c98c896 server:ActiveMQ-Artemis/2.4.0.amq-711002-redhat-1 ActiveMQ Artemis Messaging Engine . SUBSCRIBE ack:auto destination:A.B.C.D durable-subscription-name:someValue id:1 subscription-type:MULTICAST .SEND content-length:4 destination:A.B.C.D abcd.MESSAGE subscription:1 content-length:4 message-id:30 destination:A.B.C.D expires:0 redelivered:false priority:4 persistent:false timestamp:1528858440363 abcd. DISCONNECT receipt:6a8bc1fd-0c8b-4e13-871f-fbc9c8c4df9d .RECEIPT receipt-id:6a8bc1fd-0c8b-4e13-871f-fbc9c8c4df9d &lt;/pre&gt; &lt;p&gt;That&amp;#8217;s it. I hope this helps you to have a basic understanding of using the STOMP protocol with the Apache ActiveMQ Artemis or Red Hat AMQ 7.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fstomp-with-activemq-artemis-python%2F&amp;#38;linkname=Using%20the%20STOMP%20Protocol%20with%20Apache%20ActiveMQ%20Artemis%20Broker" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fstomp-with-activemq-artemis-python%2F&amp;#38;linkname=Using%20the%20STOMP%20Protocol%20with%20Apache%20ActiveMQ%20Artemis%20Broker" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fstomp-with-activemq-artemis-python%2F&amp;#38;linkname=Using%20the%20STOMP%20Protocol%20with%20Apache%20ActiveMQ%20Artemis%20Broker" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fstomp-with-activemq-artemis-python%2F&amp;#38;linkname=Using%20the%20STOMP%20Protocol%20with%20Apache%20ActiveMQ%20Artemis%20Broker" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fstomp-with-activemq-artemis-python%2F&amp;#38;linkname=Using%20the%20STOMP%20Protocol%20with%20Apache%20ActiveMQ%20Artemis%20Broker" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fstomp-with-activemq-artemis-python%2F&amp;#38;linkname=Using%20the%20STOMP%20Protocol%20with%20Apache%20ActiveMQ%20Artemis%20Broker" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fstomp-with-activemq-artemis-python%2F&amp;#38;linkname=Using%20the%20STOMP%20Protocol%20with%20Apache%20ActiveMQ%20Artemis%20Broker" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fstomp-with-activemq-artemis-python%2F&amp;#38;linkname=Using%20the%20STOMP%20Protocol%20with%20Apache%20ActiveMQ%20Artemis%20Broker" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F14%2Fstomp-with-activemq-artemis-python%2F&amp;#38;title=Using%20the%20STOMP%20Protocol%20with%20Apache%20ActiveMQ%20Artemis%20Broker" data-a2a-url="https://developers.redhat.com/blog/2018/06/14/stomp-with-activemq-artemis-python/" data-a2a-title="Using the STOMP Protocol with Apache ActiveMQ Artemis Broker"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/14/stomp-with-activemq-artemis-python/"&gt;Using the STOMP Protocol with Apache ActiveMQ Artemis Broker&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/b3AhZteGUJE" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;In this article, we will use a Python-based messaging client to connect and subscribe to a topic with a durable subscription in the Apache ActiveMQ Artemis broker. We will use the text-based STOMP protocol to connect and subscribe to the broker. STOMP clients can communicate with any STOMP message broker to provide messaging interoperability among many languages, platforms, and brokers. If you need [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/14/stomp-with-activemq-artemis-python/"&gt;Using the STOMP Protocol with Apache ActiveMQ Artemis Broker&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/06/14/stomp-with-activemq-artemis-python/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">501697</post-id><dc:creator>Chandra Shekhar Pandey</dc:creator><dc:date>2018-06-14T07:19:08Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/06/14/stomp-with-activemq-artemis-python/</feedburner:origLink></entry><entry><title>Scotland JBug - AppDev in the Cloud Workshop (slides)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/NsbtR10v84c/scotland-jbug-appdev-in-cloud-workshop-slides.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="BRMS" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Cloud Suite" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="event" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="jbug" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="workshops" scheme="searchisko:content:tags" /><category term="xpaas" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-scotland_jbug_appdev_in_the_cloud_workshop_slides</id><updated>2018-06-14T05:00:12Z</updated><published>2018-06-14T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://3.bp.blogspot.com/-Sw7Ifjmg8Hg/Wx50L7z_f_I/AAAAAAAAsw4/6TbNFO4LukEAavb_7GzcEUal5Q3m3_9QACLcBGAs/s1600/IMG_0202.JPG" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img alt="jbug scotland" border="0" data-original-height="1200" data-original-width="1600" height="240" src="https://3.bp.blogspot.com/-Sw7Ifjmg8Hg/Wx50L7z_f_I/AAAAAAAAsw4/6TbNFO4LukEAavb_7GzcEUal5Q3m3_9QACLcBGAs/s320/IMG_0202.JPG" title="" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;As &lt;a href="http://www.schabell.org/2018/05/scotland-jbug-appdev-in-the-cloud-workshop.html" target="_blank"&gt;I mentioned last time&lt;/a&gt; around, I was&amp;nbsp;&lt;a href="https://www.soprasteria.co.uk/en/newsroom/event/2018/06/06/default-calendar/sopra-steria-sponsors-jbug-scotland-appdev-in-the-cloud-workshop" target="_blank"&gt;heading back to my friends in Scotland&lt;/a&gt; to speak at the JBug Scotland.&lt;br /&gt;&lt;br /&gt;Last week it was game on in Edinburgh, where I spent the evening with a fun group of people that really seem to enjoy working with open source, containers and developing in the cloud.&lt;br /&gt;&lt;br /&gt;It was a full hands-on workshop showcasing application development in the cloud using containers, JBoss middleware, services, business logic and APIs.&lt;br /&gt;&lt;br /&gt;To change it up a bit I thought it might be fun to present not from my pre-configured, tested and working installation on my laptop, but to use an attendees laptop to kick off the first installation of our OpenShift Container Platform.&lt;br /&gt;&lt;br /&gt;Imagine the powerful storyline, when a presenter borrows your laptop for the first 30 minutes of the workshop and showcases kicking off installation so easy it works on ANY laptop?&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;It went really well with everyone engaged and staying well beyond the allotted time. We ended up wrapping up around 20:45.&lt;br /&gt;&lt;br /&gt;For completeness, here are the workshop slides, followed by the abstract from the workshop:&lt;br /&gt;&lt;br /&gt;&lt;div align="center"&gt;&lt;iframe allowfullscreen="" frameborder="0" height="380" marginheight="0" marginwidth="0" scrolling="no" src="https://appdevcloudworkshop.github.io" style="border-width: 1px; border: 1px solid #ccc; margin-bottom: 5px; max-width: 100%;" width="660"&gt;&lt;/iframe&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;&lt;a href="https://appdevcloudworkshop.github.io/#/" target="_blank"&gt;AppDev in the Cloud Workshop&lt;/a&gt;&lt;/h3&gt;&lt;i&gt;Ready to get hands-on with AppDev in the Cloud with container based services?&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt; &lt;i&gt;This workshop will let you experience the wonders of Red Hat's open technologies for cloud-based container application development, letting you integrate multiple services in to a polyglot cloud solution. In this workshop you're a developer working for Destinaisa, a travel agency that needs to set up its online bookings applications backend services. You'll be given the OpenShift Container Platform, then installing JBoss BRMS to work in the Destinasia discount rules.&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;br /&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&lt;a href="https://2.bp.blogspot.com/-lyEmaJt9vsU/Wx50YcLlpUI/AAAAAAAAsxA/yrzNIcSNnWQajLfKMYzzdZUIxkJE739tgCLcBGAs/s1600/IMG_0203.JPG" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="jbug scotland" border="0" data-original-height="1200" data-original-width="1600" height="240" src="https://2.bp.blogspot.com/-lyEmaJt9vsU/Wx50YcLlpUI/AAAAAAAAsxA/yrzNIcSNnWQajLfKMYzzdZUIxkJE739tgCLcBGAs/s320/IMG_0203.JPG" title="" width="320" /&gt;&lt;/a&gt;&lt;i&gt;Once they are completed, you leverage Ansible playbooks to see infrastructure automation in action. Each playbook will deploy a new container based service to support flight, hotel, car and discount rule queries from your application. In total you will be running 6 container based applications or services in a private PaaS before testing this solution with a REST client, sending a booking and verifying the discounts provided by the rules you implemented.&lt;/i&gt;&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Again a great time with my friends in Scotland, looking forward to the next trip through Edinburgh!&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=c1HkKmGCTN8:t7PGXhCO5F0:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=c1HkKmGCTN8:t7PGXhCO5F0:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=c1HkKmGCTN8:t7PGXhCO5F0:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=c1HkKmGCTN8:t7PGXhCO5F0:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=c1HkKmGCTN8:t7PGXhCO5F0:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=c1HkKmGCTN8:t7PGXhCO5F0:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=c1HkKmGCTN8:t7PGXhCO5F0:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=c1HkKmGCTN8:t7PGXhCO5F0:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=c1HkKmGCTN8:t7PGXhCO5F0:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=c1HkKmGCTN8:t7PGXhCO5F0:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=c1HkKmGCTN8:t7PGXhCO5F0:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/c1HkKmGCTN8" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/NsbtR10v84c" height="1" width="1" alt=""/&gt;</content><summary>As I mentioned last time around, I was heading back to my friends in Scotland to speak at the JBug Scotland. Last week it was game on in Edinburgh, where I spent the evening with a fun group of people that really seem to enjoy working with open source, containers and developing in the cloud. It was a full hands-on workshop showcasing application development in the cloud using containers, JBoss mid...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-06-14T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/c1HkKmGCTN8/scotland-jbug-appdev-in-cloud-workshop-slides.html</feedburner:origLink></entry><entry><title>Arquillian Cube Extension 1.16.0 Released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/6xKIYkpYH2M/" /><category term="arquillian" scheme="searchisko:content:tags" /><category term="cube" scheme="searchisko:content:tags" /><category term="extension" scheme="searchisko:content:tags" /><category term="feed_group_name_arquillian" scheme="searchisko:content:tags" /><category term="feed_name_arquillian" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Arquillian Project Team</name></author><id>searchisko:content:id:jbossorg_blog-arquillian_cube_extension_1_16_0_released</id><updated>2018-06-14T00:00:00Z</updated><published>2018-06-14T00:00:00Z</published><content type="html">&lt;p&gt;The Arquillian team is proud to announce the &lt;em&gt;1.16.0&lt;/em&gt; release of the &lt;em&gt;Arquillian Cube Extension&lt;/em&gt; component!&lt;/p&gt; &lt;h3&gt;What is Arquillian Cube Extension?&lt;/h3&gt; &lt;p&gt;With Arquillian Cube you can control the lifecycle of Docker images as part of the test lifecyle, either automatically or manually. This gives you the chance to scale up from a integration/functional test level all the way up to the system test level.&lt;/p&gt; &lt;h3&gt;Release details&lt;/h3&gt; &lt;table class="table table-bordered table-striped"&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th&gt;Component&lt;/th&gt; &lt;td&gt; &lt;a href="http://arquillian.org/modules/cube-extension/"&gt;Arquillian Cube Extension&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;Version&lt;/th&gt; &lt;td&gt; 1.16.0 &lt;span class="label tag"&gt; &lt;a href="https://github.com/arquillian/arquillian-cube/commit/89b2ec0c8d8018acf83d67a1fcc99d95457c0e4e.html"&gt;view tag&lt;/a&gt; &lt;/span&gt; &lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;Release date&lt;/th&gt; &lt;td&gt;2018-06-13&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;Released by&lt;/th&gt; &lt;td&gt;Dipak Pawar&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;Compiled against&lt;/th&gt; &lt;td&gt; &lt;ul class="unstyled"&gt; &lt;li&gt; &lt;a href="http://arquillian.org/modules/core-platform/"&gt;Arquillian Core&lt;/a&gt; – &lt;a href="http://arquillian.org/blog/2018/02/27/arquillian-core-1-4-0-Final/"&gt;1.4.0.Final&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href="http://arquillian.org/modules/spacelift-extension/"&gt;Arquillian Spacelift&lt;/a&gt; – &lt;a href="http://arquillian.org/blog/2017/06/02/arquillian-spacelift-1-0-2/"&gt;1.0.2&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href="http://arquillian.org/modules/shrinkwrap-shrinkwrap/"&gt;ShrinkWrap&lt;/a&gt; – &lt;a href="http://arquillian.org/blog/2016/06/18/shrinkwrap-1-2-6/"&gt;1.2.6&lt;/a&gt; &lt;/li&gt; &lt;li&gt; &lt;a href="http://arquillian.org/modules/resolver-shrinkwrap/"&gt;ShrinkWrap Resolver&lt;/a&gt; – &lt;a href="http://arquillian.org/blog/2017/12/07/resolver-3-0-1/"&gt;3.0.1&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt; &lt;h3&gt; Published artifacts &lt;small&gt;org.arquillian.cube&lt;/small&gt; &lt;/h3&gt; &lt;ul&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-api &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-api/1.16.0/arquillian-cube-api-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-api/1.16.0/arquillian-cube-api-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-api/1.16.0/arquillian-cube-api-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-spi &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-spi/1.16.0/arquillian-cube-spi-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-spi/1.16.0/arquillian-cube-spi-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-spi/1.16.0/arquillian-cube-spi-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-core &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-core/1.16.0/arquillian-cube-core-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-core/1.16.0/arquillian-cube-core-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-core/1.16.0/arquillian-cube-core-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-containerless &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-containerless/1.16.0/arquillian-cube-containerless-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-containerless/1.16.0/arquillian-cube-containerless-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-containerless/1.16.0/arquillian-cube-containerless-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » assertj-docker-java &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/assertj-docker-java/1.16.0/assertj-docker-java-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/assertj-docker-java/1.16.0/assertj-docker-java-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/assertj-docker-java/1.16.0/assertj-docker-java-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-docker &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker/1.16.0/arquillian-cube-docker-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-docker/1.16.0/arquillian-cube-docker-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker/1.16.0/arquillian-cube-docker-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-docker-drone &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-drone/1.16.0/arquillian-cube-docker-drone-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-docker-drone/1.16.0/arquillian-cube-docker-drone-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-drone/1.16.0/arquillian-cube-docker-drone-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-docker-reporter &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-reporter/1.16.0/arquillian-cube-docker-reporter-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-docker-reporter/1.16.0/arquillian-cube-docker-reporter-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-reporter/1.16.0/arquillian-cube-docker-reporter-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-docker-restassured &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-restassured/1.16.0/arquillian-cube-docker-restassured-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-docker-restassured/1.16.0/arquillian-cube-docker-restassured-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-restassured/1.16.0/arquillian-cube-docker-restassured-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-docker-junit-rule &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-junit-rule/1.16.0/arquillian-cube-docker-junit-rule-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-docker-junit-rule/1.16.0/arquillian-cube-docker-junit-rule-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-junit-rule/1.16.0/arquillian-cube-docker-junit-rule-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-docker-junit5 &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-junit5/1.16.0/arquillian-cube-docker-junit5-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-docker-junit5/1.16.0/arquillian-cube-docker-junit5-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-junit5/1.16.0/arquillian-cube-docker-junit5-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-docker-junit-rules &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-junit-rules/1.16.0/arquillian-cube-docker-junit-rules-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-docker-junit-rules/1.16.0/arquillian-cube-docker-junit-rules-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-junit-rules/1.16.0/arquillian-cube-docker-junit-rules-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-openshift-api &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-openshift-api/1.16.0/arquillian-cube-openshift-api-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-openshift-api/1.16.0/arquillian-cube-openshift-api-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-openshift-api/1.16.0/arquillian-cube-openshift-api-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-openshift-shrinkwrap &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-openshift-shrinkwrap/1.16.0/arquillian-cube-openshift-shrinkwrap-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-openshift-shrinkwrap/1.16.0/arquillian-cube-openshift-shrinkwrap-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-openshift-shrinkwrap/1.16.0/arquillian-cube-openshift-shrinkwrap-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-openshift &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-openshift/1.16.0/arquillian-cube-openshift-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-openshift/1.16.0/arquillian-cube-openshift-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-openshift/1.16.0/arquillian-cube-openshift-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-openshift-restassured &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-openshift-restassured/1.16.0/arquillian-cube-openshift-restassured-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-openshift-restassured/1.16.0/arquillian-cube-openshift-restassured-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-openshift-restassured/1.16.0/arquillian-cube-openshift-restassured-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-kubernetes-fabric8 &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-kubernetes-fabric8/1.16.0/arquillian-cube-kubernetes-fabric8-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-kubernetes-fabric8/1.16.0/arquillian-cube-kubernetes-fabric8-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-kubernetes-fabric8/1.16.0/arquillian-cube-kubernetes-fabric8-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-kubernetes &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-kubernetes/1.16.0/arquillian-cube-kubernetes-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-kubernetes/1.16.0/arquillian-cube-kubernetes-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-kubernetes/1.16.0/arquillian-cube-kubernetes-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-istio-kubernetes-api &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-istio-kubernetes-api/1.16.0/arquillian-cube-istio-kubernetes-api-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-istio-kubernetes-api/1.16.0/arquillian-cube-istio-kubernetes-api-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-istio-kubernetes-api/1.16.0/arquillian-cube-istio-kubernetes-api-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-istio-kubernetes &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-istio-kubernetes/1.16.0/arquillian-cube-istio-kubernetes-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-istio-kubernetes/1.16.0/arquillian-cube-istio-kubernetes-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-istio-kubernetes/1.16.0/arquillian-cube-istio-kubernetes-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-kubernetes-reporter &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-kubernetes-reporter/1.16.0/arquillian-cube-kubernetes-reporter-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-kubernetes-reporter/1.16.0/arquillian-cube-kubernetes-reporter-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-kubernetes-reporter/1.16.0/arquillian-cube-kubernetes-reporter-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-requirement &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-requirement/1.16.0/arquillian-cube-requirement-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-requirement/1.16.0/arquillian-cube-requirement-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-requirement/1.16.0/arquillian-cube-requirement-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-bom &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-bom/1.16.0/arquillian-cube-bom-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-requirement-spi &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-requirement-spi/1.16.0/arquillian-cube-requirement-spi-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-requirement-spi/1.16.0/arquillian-cube-requirement-spi-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-requirement-spi/1.16.0/arquillian-cube-requirement-spi-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-docker-starter &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-starter/1.16.0/arquillian-cube-docker-starter-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-docker-starter/1.16.0/arquillian-cube-docker-starter-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-docker-starter/1.16.0/arquillian-cube-docker-starter-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-kubernetes-starter &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-kubernetes-starter/1.16.0/arquillian-cube-kubernetes-starter-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-kubernetes-starter/1.16.0/arquillian-cube-kubernetes-starter-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-kubernetes-starter/1.16.0/arquillian-cube-kubernetes-starter-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;li&gt; org.arquillian.cube » arquillian-cube-openshift-starter &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-openshift-starter/1.16.0/arquillian-cube-openshift-starter-1.16.0.jar" target="_blank"&gt;jar&lt;/a&gt; &lt;a class="artifact" href="https://repository.jboss.org/nexus/content/repositories/unzip/org/arquillian/cube/arquillian-cube-openshift-starter/1.16.0/arquillian-cube-openshift-starter-1.16.0-javadoc.jar-unzip/index.html" target="_blank"&gt;javadoc&lt;/a&gt; &lt;a class="artifact" href="http://repo1.maven.org/maven2/org/arquillian/cube/arquillian-cube-openshift-starter/1.16.0/arquillian-cube-openshift-starter-1.16.0.pom" target="_blank"&gt;pom&lt;/a&gt; &lt;/li&gt; &lt;/ul&gt; &lt;h3&gt; Release notes and resolved issues &lt;small&gt;6&lt;/small&gt; &lt;/h3&gt; &lt;p&gt;&lt;/p&gt; &lt;dl&gt; &lt;dt&gt;Other&lt;/dt&gt; &lt;dd&gt; &lt;ul class="unstyled"&gt; &lt;li&gt;&lt;a href="https://github.com/arquillian/arquillian-cube/issues/1052"&gt;#1052 OpenShiftAssistant : add a scale method with applicationName &lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/arquillian/arquillian-cube/issues/1051"&gt;#1051 KubernetesAssistant : improve detection of ready containers in pod&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/arquillian/arquillian-cube/issues/1048"&gt;#1048 java.io.IOException: Failed to upgrade connection when running test against OCP 3.9&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/arquillian/arquillian-cube/issues/1047"&gt;#1047 Make it possible to override namespace per class&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/arquillian/arquillian-cube/issues/1045"&gt;#1045 Cannot use plain text in @OpenShiftResource&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://github.com/arquillian/arquillian-cube/issues/1035"&gt;#1035 Update oc to use v3.9.0&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/dd&gt; &lt;/dl&gt; &lt;p&gt; Thanks to the following list of contributors: &lt;a href="http://arquillian.org/community/dipak-pawar"&gt;Dipak Pawar&lt;/a&gt;, &lt;a href="http://arquillian.org/community/goldmann"&gt;Marek Goldmann&lt;/a&gt;, &lt;a href="http://arquillian.org/community/kdaemonv"&gt;Kdaemonv&lt;/a&gt;, &lt;a href="http://arquillian.org/community/matousjobanek"&gt;Matous Jobanek&lt;/a&gt;, &lt;a href="http://arquillian.org/community/dcdh"&gt;Damien Clément D'huart&lt;/a&gt; &lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/6xKIYkpYH2M" height="1" width="1" alt=""/&gt;</content><summary>The Arquillian team is proud to announce the 1.16.0 release of the Arquillian Cube Extension component! What is Arquillian Cube Extension? With Arquillian Cube you can control the lifecycle of Docker images as part of the test lifecyle, either automatically or manually. This gives you the chance to scale up from a integration/functional test level all the way up to the system test level. Release d...</summary><dc:creator>Arquillian Project Team</dc:creator><dc:date>2018-06-14T00:00:00Z</dc:date><feedburner:origLink>http://arquillian.org/blog/2018/06/13/arquillian-cube-1-16-0/</feedburner:origLink></entry><entry><title>Remotely Debug an ASP.NET Core Container Pod on OpenShift with Visual Studio</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/nH-KmyRy32c/" /><category term=".NET Core" /><category term="Red Hat OpenShift Container Platform" /><category term=".NET" /><category term="ASP.NET" /><category term="ASP.NET Core" /><category term="debug" /><category term="debugging" /><category term="remote debug" /><category term="Visual Studio" /><author><name>Takayoshi Tanaka</name></author><id>https://developers.redhat.com/blog/?p=501037</id><updated>2018-06-13T11:00:18Z</updated><published>2018-06-13T11:00:18Z</published><content type="html">&lt;p&gt;Last year, I wrote &lt;a href="https://developers.redhat.com/blog/2017/10/23/remote-debug-asp-net-core-container-openshift-visual-studio-code/" target="_blank" rel="noopener"&gt;a blog post how to remotely debug your ASP.NET Core container on OpenShift with Visual Studio Code&lt;/a&gt;. Today I introduce how to remotely debug a pod using Visual Studio from your Windows computer. Sometimes you encounter an issue that happens only in the production environment. Remotely debugging a pod enables you to investigate such an issue.&lt;/p&gt; &lt;p&gt;Visual Studio and Visual Studio Code now support SSH as a transport protocol for remote debugging. If a remote host accepts an SSH connection, Visual Studio can do remote debugging using Visual Studio&amp;#8217;s default feature. However, you need to use the &lt;code&gt;oc&lt;/code&gt; command instead of an SSH client such as &lt;a href="https://putty.org/" target="_blank" rel="noopener"&gt;putty&lt;/a&gt; since Red Hat OpenShift pods don&amp;#8217;t allow direct connections via SSH. The &lt;a href="https://github.com/Microsoft/MIEngine" target="_blank" rel="noopener"&gt;MIEngine&lt;/a&gt; debugger enables you to use any command for SSH connection.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-large wp-image-501077 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug3-1024x340.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug3-1024x340.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug3-1024x340.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug3-300x100.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug3-768x255.png 768w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;Note:&lt;br /&gt; All the steps below have been confirmed using a combination of Visual Studio 2017 (versions 15.7.2 and 15.8 preview2) on Windows 10 and OpenShift 3.9.&lt;/p&gt; &lt;p&gt;&lt;span id="more-501037"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Set Up Your ASP.NET Core Pod&lt;/h2&gt; &lt;p&gt;The procedure for setting up the ASP.NET Core pod is almost same as what I wrote before for Visual Studio Code. Here is a summary.&lt;/p&gt; &lt;h3&gt;Debug Build&lt;/h3&gt; &lt;p&gt;A debug build works fine for remotely debugging. If you use the .NET Core s2i image, the build is a release build by default. You can change to a debug build by specifying the &lt;code&gt;DOTNET_CONFIGURATION&lt;/code&gt; build environment variable, as shown below:&lt;/p&gt; &lt;pre&gt;$ oc set env bc DOTNET_CONFIGURATION=Debug &lt;/pre&gt; &lt;h3&gt;Disable Health Check&lt;/h3&gt; &lt;p&gt;Disabling health check is not mandatory but it is recommended because a pod could be restarted while the process is paused during remote debugging. You can remove &lt;a href="https://docs.openshift.com/container-platform/3.9/dev_guide/application_health.html#container-health-checks-using-probes" target="_blank" rel="noopener"&gt;the readiness check&lt;/a&gt; to prevent an unintended restart.&lt;/p&gt; &lt;h3&gt;Install the vsdbg Binary in the Pod&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;vsdbg&lt;/code&gt; binary is a product from &lt;a href="https://github.com/Microsoft/MIEngine" target="_blank" rel="noopener"&gt;MIEnginer by Microsoft&lt;/a&gt;. You can install &lt;code&gt;vsdbg&lt;/code&gt; in a pod as follows:&lt;/p&gt; &lt;pre&gt;$ oc rsh # curl -sSL https://aka.ms/getvsdbgsh | bash /dev/stdin -v vs2017u5 -l ~/vsdbg &lt;/pre&gt; &lt;h2&gt;Start a Remote Debugging Session&lt;/h2&gt; &lt;p&gt;The detailed steps are described in the &lt;a href="https://github.com/Microsoft/MIEngine/wiki/Offroad-Debugging-of-.NET-Core-on-Linux---OSX-from-Visual-Studio" target="_blank" rel="noopener"&gt;MIEngine wiki&lt;/a&gt;. I describe some of the points here.&lt;/p&gt; &lt;p&gt;First, you need to create a launch configuration file. This is similar to the &lt;code&gt;launch.json&lt;/code&gt; file for Visual Studio Code but not exactly the same. Here is an example. Please replace the path to the &lt;code&gt;oc.exe&lt;/code&gt; file and the name of the pod so they are appropriate for your environment.&lt;/p&gt; &lt;pre&gt;{ "version": "0.2.0", "adapter": "c:\\path\\to\\oc.exe", "adapterArgs": "exec -i -- /opt/app-root/vsdbg/vsdbg --interpreter=vscode", "languageMappings": { "C#": { "languageId": "3F5162F8-07C6-11D3-9053-00C04FA302A1", "extensions": [ "*" ] } }, "exceptionCategoryMappings": { "CLR": "449EC4CC-30D2-4032-9256-EE18EB41B62B", "MDA": "6ECE07A9-0EDE-45C4-8296-818D8FC401D4" }, "configurations": [ { "name": ".NET Core Attach", "type": "coreclr", "cwd": "/opt/app-root/app", "processId": "1", "request": "attach", "justMyCode": false, "sourceFileMap": { "/opt/app-root/src/": "${workspaceRoot}" } } ] } &lt;/pre&gt; &lt;p&gt;Then, open the project which has already synced with the running application in Visual Studio. Select &lt;strong&gt;View-&amp;#62;Other Windows-&amp;#62;Command Window&lt;/strong&gt; in Visual Studio. You can start the remote debugging session by executing the command &lt;code&gt;DebugAdapterHost.Launch /LaunchJson:""&lt;/code&gt; in Command Window.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-large wp-image-501047 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug1-1024x275.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug1-1024x275.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug1-1024x275.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug1-300x80.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug1-768x206.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug1.png 1257w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;You can put in a breakpoint so the process will be paused at that point.&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-large wp-image-501057 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug2-1024x622.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug2-1024x622.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug2-1024x622.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug2-300x182.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug2-768x466.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/debug2.png 1545w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;Now you can see the actual values of variables in the source code. Your favorite Visual Studio debugging feature is available for ASP.NET Core on OpenShift. You can execute your code line by line with the step execution feature.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F13%2Fremotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio%2F&amp;#38;linkname=Remotely%20Debug%20an%20ASP.NET%20Core%20Container%20Pod%20on%20OpenShift%20with%20Visual%20Studio" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F13%2Fremotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio%2F&amp;#38;linkname=Remotely%20Debug%20an%20ASP.NET%20Core%20Container%20Pod%20on%20OpenShift%20with%20Visual%20Studio" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F13%2Fremotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio%2F&amp;#38;linkname=Remotely%20Debug%20an%20ASP.NET%20Core%20Container%20Pod%20on%20OpenShift%20with%20Visual%20Studio" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F13%2Fremotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio%2F&amp;#38;linkname=Remotely%20Debug%20an%20ASP.NET%20Core%20Container%20Pod%20on%20OpenShift%20with%20Visual%20Studio" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F13%2Fremotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio%2F&amp;#38;linkname=Remotely%20Debug%20an%20ASP.NET%20Core%20Container%20Pod%20on%20OpenShift%20with%20Visual%20Studio" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F13%2Fremotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio%2F&amp;#38;linkname=Remotely%20Debug%20an%20ASP.NET%20Core%20Container%20Pod%20on%20OpenShift%20with%20Visual%20Studio" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F13%2Fremotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio%2F&amp;#38;linkname=Remotely%20Debug%20an%20ASP.NET%20Core%20Container%20Pod%20on%20OpenShift%20with%20Visual%20Studio" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F13%2Fremotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio%2F&amp;#38;linkname=Remotely%20Debug%20an%20ASP.NET%20Core%20Container%20Pod%20on%20OpenShift%20with%20Visual%20Studio" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F13%2Fremotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio%2F&amp;#38;title=Remotely%20Debug%20an%20ASP.NET%20Core%20Container%20Pod%20on%20OpenShift%20with%20Visual%20Studio" data-a2a-url="https://developers.redhat.com/blog/2018/06/13/remotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio/" data-a2a-title="Remotely Debug an ASP.NET Core Container Pod on OpenShift with Visual Studio"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/13/remotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio/"&gt;Remotely Debug an ASP.NET Core Container Pod on OpenShift with Visual Studio&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/nH-KmyRy32c" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;Last year, I wrote a blog post how to remotely debug your ASP.NET Core container on OpenShift with Visual Studio Code. Today I introduce how to remotely debug a pod using Visual Studio from your Windows computer. Sometimes you encounter an issue that happens only in the production environment. Remotely debugging a pod enables you [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/13/remotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio/"&gt;Remotely Debug an ASP.NET Core Container Pod on OpenShift with Visual Studio&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/06/13/remotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">501037</post-id><dc:creator>Takayoshi Tanaka</dc:creator><dc:date>2018-06-13T11:00:18Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/06/13/remotely-debug-asp-net-core-container-pod-on-openshift-with-visual-studio/</feedburner:origLink></entry><entry><title>single zip distribution for jBPM</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/jbPA_uT31iw/single-zip-distribution-for-jbpm.html" /><category term="feed_group_name_jbossjbpmcommunity" scheme="searchisko:content:tags" /><category term="feed_name_swiderskimaciej" scheme="searchisko:content:tags" /><author><name>Maciej Swiderski</name></author><id>searchisko:content:id:jbossorg_blog-single_zip_distribution_for_jbpm</id><updated>2018-06-13T09:52:09Z</updated><published>2018-06-13T09:52:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;To simplify getting started experience for users I'd like to showcase a single zip distribution that includes:&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;WildFly server (at the moment version 11.0.0.Final)&lt;/li&gt;&lt;li&gt;workbench (aka jbpm console)&lt;/li&gt;&lt;li&gt;kie server with all capabilities enabled&lt;/li&gt;&lt;li&gt;jBPM case management show case application&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;All of them are perfectly configured and ready to run with just single and short command:&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;./stanalone.sh&lt;/span&gt;&lt;/div&gt;&lt;div&gt;or on windows&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;standalone.bat&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The only thing user needs to do is download, unzip and run!&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;But that's not all that comes with this single zip distribution - it comes with very handy scripts that allow to switch to different databases as easy as just one click.&lt;/div&gt;&lt;div&gt;There are three databases supported out of the box:&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;b&gt;H2&lt;/b&gt; - default with file based data base stored under &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;WILDFLY_HOME/standalone/data&lt;/span&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;MySQL&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;PostgreSQL&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;MySQL and PostgreSQL must be installed before use. Moreover the scripts assume following values:&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;b&gt;host&lt;/b&gt; -&amp;gt; localhost&lt;/li&gt;&lt;li&gt;&lt;b&gt;port&lt;/b&gt; -&amp;gt; 3306 for MySQL and 5432 for PostgreSQL&lt;/li&gt;&lt;li&gt;&lt;b&gt;database name &lt;/b&gt;-&amp;gt; jbpm&lt;/li&gt;&lt;li&gt;&lt;b&gt;user name&lt;/b&gt; -&amp;gt; jbpm&lt;/li&gt;&lt;li&gt;&lt;b&gt;password &lt;/b&gt;-&amp;gt; jbpm&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;div&gt;in case the values are not correct, edit them in the script files&amp;nbsp;&lt;/div&gt;&lt;div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;&lt;b&gt;jbpm-mysql-config.cli&lt;/b&gt; for MySQL&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;b&gt;jbpm-postgres-config.cli&lt;/b&gt; for PostgreSQL&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;in both scripts values to be updated are on line 17 and these are located under &lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;WILDFLY_HOME/bin&lt;/span&gt;.&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;To switch to MySQL stop the server and use following command when server is stopped&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;lt;WILDFLY_HOME&amp;gt;/bin/jboss-cli.sh --file=jbpm-mysql-config.cli&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;(Unix / Linux)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;lt;WILDFLY_HOME&amp;gt;\bin\jboss-cli.bat --file=jbpm-mysql-config.cli &lt;/span&gt;&amp;nbsp; &amp;nbsp; (Windows)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;To switch to PostgreSQL stop the server and &amp;nbsp;use following command when server is stopped&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;lt;WILDFLY_HOME&amp;gt;/bin/jboss-cli.sh --file=jbpm-postgres-config.cli&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;(Unix / Linux)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&amp;lt;WILDFLY_HOME&amp;gt;\bin\jboss-cli.bat --file=jbpm-postgres-config.cli&lt;/span&gt; &amp;nbsp; &amp;nbsp; (Windows)&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;next, start the server again and all your data will be stored in external database.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;All this in action can be seen in this "not so short" screencast&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;iframe allow="autoplay; encrypted-media" allowfullscreen="" frameborder="0" height="315" src="https://www.youtube.com/embed/gIqOBOOuYd0" width="560"&gt;&lt;/iframe&gt; &lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;As usual feedback welcome and please share your opinion if you'd like to see this in the official distribution of jBPM.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;For those that would like to give it a go directly &lt;a href="https://github.com/mswiderski/jbpm-server-distribution"&gt;here is the project&lt;/a&gt; - just clone it and build locally - in case you want to use another version of jBPM change property named &lt;b&gt;kie.version&lt;/b&gt; to the version number you want to use.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/jbPA_uT31iw" height="1" width="1" alt=""/&gt;</content><summary>To simplify getting started experience for users I'd like to showcase a single zip distribution that includes: WildFly server (at the moment version 11.0.0.Final) workbench (aka jbpm console) kie server with all capabilities enabled jBPM case management show case application All of them are perfectly configured and ready to run with just single and short command: ./stanalone.sh or on windows stand...</summary><dc:creator>Maciej Swiderski</dc:creator><dc:date>2018-06-13T09:52:00Z</dc:date><feedburner:origLink>http://mswiderski.blogspot.com/2018/06/single-zip-distribution-for-jbpm.html</feedburner:origLink></entry><entry><title>EDI Transformations with Fuse Ignite and Trace Transformer</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/oDju3ZVY8Fw/" /><category term="Developer Tools" /><category term="Integration" /><category term="JBoss Fuse" /><category term="camel" /><category term="EDI" /><category term="Fuse" /><category term="Fuse Ignite" /><category term="Fuse Integration Services" /><category term="iPaaS" /><category term="jboss fuse" /><category term="Red Hat OpenShift" /><author><name>Simon Green</name></author><id>https://developers.redhat.com/blog/?p=491807</id><updated>2018-06-12T11:00:30Z</updated><published>2018-06-12T11:00:30Z</published><content type="html">&lt;p&gt;As part of Red Hat JBoss Fuse 7, Red Hat introduces a new Integration Platform as a Service (iPaaS) called Fuse Ignite. Gartner uses the term c&lt;em&gt;itizen integrators &lt;/em&gt;to describe the iPaaS target market:&lt;em&gt; &lt;/em&gt;folks who aren&amp;#8217;t regularly concerned with integration. In my opinion, this market includes Electronic Data Interchange (EDI) analysts who focus on business rules and validations, rather than worrying about lines of code or Apache Camel routes. Therefore, Fuse Ignite introduces a mechanism to separate concerns, allowing EDI analysts to focus on their business mappings and transformations. On the other hand, developers can focus on low-level integration with systems and on writing code. Fuse Ignite offers a platform on which both citizen integrators and developers can coexist, collaborate, and contribute to an end-to-end integration.&lt;/p&gt; &lt;p&gt;&lt;span id="more-491807"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Trace Transformer&lt;/h2&gt; &lt;p&gt;Java has a bad record for transforming the complex textual formats and standards we find in EDI. Although Apache Camel helps somewhat with basic transformation, it will never be able to handle complex EDI standards by itself. Therefore, my recommendation is to use EDI tooling from our partner, Trace. Any EDI analyst can learn Trace&amp;#8217;s sophisticated drag-and-drop tool, Transformer, which offers support for any EDI standard imaginable.&lt;/p&gt; &lt;p&gt;&lt;img class=" size-large wp-image-492237 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-07-at-11.01.01-AM-1024x544.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-07-at-11.01.01-AM-1024x544.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-07-at-11.01.01-AM-1024x544.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-07-at-11.01.01-AM-300x159.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-07-at-11.01.01-AM-768x408.png 768w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;In the past, Trace exported EDI mappings as an OSGi bundle, easily deployable to JBoss Fuse and interoperable with Camel. But with the advent of Spring Boot and Red Hat OpenShift, what is the best path forward? The answer is Fuse Ignite!&lt;/p&gt; &lt;h2&gt;Fuse Ignite&lt;/h2&gt; &lt;p&gt;Fuse Ignite is simply a c&lt;em&gt;itizen integrator–friendly &lt;/em&gt;interface for contributing to integration flows. Whether it&amp;#8217;s connecting to a complicated Salesforce API or publishing to a JMS queue or topic, Fuse Ignite allows citizen integrators to create their own integration flow. With Trace Transformer, they now have the ability to write, maintain, and operate their complex EDI transformations without worrying about writing a single Camel route. This mechanism, called a s&lt;em&gt;tep extension,&lt;/em&gt; gives developers the ability to add their own custom steps, which citizen integrators can include in their integrations. We now have a simple-to-use web interface for creating, monitoring, and operating integrations. And, of course, it&amp;#8217;s built on OpenShift to take care of how our integrations are deployed at scale.&lt;/p&gt; &lt;p&gt;&lt;img class=" size-large wp-image-492247 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-07-at-11.04.45-AM-1024x385.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-07-at-11.04.45-AM-1024x385.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-07-at-11.04.45-AM-1024x385.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-07-at-11.04.45-AM-300x113.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/05/Screen-Shot-2018-05-07-at-11.04.45-AM-768x289.png 768w" sizes="(max-width: 1024px) 100vw, 1024px" /&gt;&lt;/p&gt; &lt;p&gt;I&amp;#8217;ve created a &lt;a href="https://github.com/sigreen/trace-transformer-syndesis-extension"&gt;sample project&lt;/a&gt; in GitHub that demonstrates the use of Trace Transformer with Fuse Ignite. Also, click below to watch my video demonstration of Fuse Ignite with the Trace Transformer step extension.&lt;/p&gt; &lt;p&gt;&lt;iframe class='youtube-player' type='text/html' width='640' height='390' src='https://www.youtube.com/embed/iC0ucIbbYf4?version=3&amp;#038;rel=1&amp;#038;fs=1&amp;#038;autohide=2&amp;#038;showsearch=0&amp;#038;showinfo=1&amp;#038;iv_load_policy=1&amp;#038;wmode=transparent' allowfullscreen='true' style='border:0;'&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F12%2Fedi-transformations-with-fuse-ignite-and-trace-transformer%2F&amp;#38;linkname=EDI%20Transformations%20with%20Fuse%20Ignite%20and%20Trace%20Transformer" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F12%2Fedi-transformations-with-fuse-ignite-and-trace-transformer%2F&amp;#38;linkname=EDI%20Transformations%20with%20Fuse%20Ignite%20and%20Trace%20Transformer" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F12%2Fedi-transformations-with-fuse-ignite-and-trace-transformer%2F&amp;#38;linkname=EDI%20Transformations%20with%20Fuse%20Ignite%20and%20Trace%20Transformer" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F12%2Fedi-transformations-with-fuse-ignite-and-trace-transformer%2F&amp;#38;linkname=EDI%20Transformations%20with%20Fuse%20Ignite%20and%20Trace%20Transformer" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F12%2Fedi-transformations-with-fuse-ignite-and-trace-transformer%2F&amp;#38;linkname=EDI%20Transformations%20with%20Fuse%20Ignite%20and%20Trace%20Transformer" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F12%2Fedi-transformations-with-fuse-ignite-and-trace-transformer%2F&amp;#38;linkname=EDI%20Transformations%20with%20Fuse%20Ignite%20and%20Trace%20Transformer" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F12%2Fedi-transformations-with-fuse-ignite-and-trace-transformer%2F&amp;#38;linkname=EDI%20Transformations%20with%20Fuse%20Ignite%20and%20Trace%20Transformer" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F12%2Fedi-transformations-with-fuse-ignite-and-trace-transformer%2F&amp;#38;linkname=EDI%20Transformations%20with%20Fuse%20Ignite%20and%20Trace%20Transformer" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F06%2F12%2Fedi-transformations-with-fuse-ignite-and-trace-transformer%2F&amp;#38;title=EDI%20Transformations%20with%20Fuse%20Ignite%20and%20Trace%20Transformer" data-a2a-url="https://developers.redhat.com/blog/2018/06/12/edi-transformations-with-fuse-ignite-and-trace-transformer/" data-a2a-title="EDI Transformations with Fuse Ignite and Trace Transformer"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/12/edi-transformations-with-fuse-ignite-and-trace-transformer/"&gt;EDI Transformations with Fuse Ignite and Trace Transformer&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/oDju3ZVY8Fw" height="1" width="1" alt=""/&gt;</content><summary type="html">&lt;p&gt;As part of Red Hat JBoss Fuse 7, Red Hat introduces a new Integration Platform as a Service (iPaaS) called Fuse Ignite. Gartner uses the term citizen integrators to describe the iPaaS target market: folks who aren&amp;#8217;t regularly concerned with integration. In my opinion, this market includes Electronic Data Interchange (EDI) analysts who focus on business rules [&amp;#8230;]&lt;/p&gt; &lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/06/12/edi-transformations-with-fuse-ignite-and-trace-transformer/"&gt;EDI Transformations with Fuse Ignite and Trace Transformer&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;</summary><wfw:commentRss xmlns:wfw="http://wellformedweb.org/CommentAPI/">https://developers.redhat.com/blog/2018/06/12/edi-transformations-with-fuse-ignite-and-trace-transformer/feed/</wfw:commentRss><slash:comments xmlns:slash="http://purl.org/rss/1.0/modules/slash/">0</slash:comments><post-id xmlns="com-wordpress:feed-additions:1">491807</post-id><dc:creator>Simon Green</dc:creator><dc:date>2018-06-12T11:00:30Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/06/12/edi-transformations-with-fuse-ignite-and-trace-transformer/</feedburner:origLink></entry></feed>
